# src/configs/algorithm.yaml

name: forecast_based_graph_cpd
version: 1.0
description: "Forecast-based Graph Structural Change Detection using Martingale Framework with Distribution-Aware Prediction"

# Algorithm execution mode
execution:
  enable_prediction: true  # Whether to use prediction for enhanced detection
  enable_visualization: true  # Whether to create visualizations
  save_csv: true  # Whether to export results to CSV files

# Trial configuration
trials:
  n_trials: 1  # Number of times to run the detector
  random_seeds: 42 # Random seeds for reproducibility

# Model configuration
model:
  type: "multiview"  # or "single_view"
  network: "sbm"  # choices: ["ba", "ws", "er", "sbm"]
  predictor:
    type: "graph"  # choices: ["adaptive", "auto", "statistical", "graph"]
    config:
      alpha: 0.8
      gamma: 0.5
      omega: null
      beta_init: 0.5
      enforce_connectivity: true
      adaptive: true
      optimization_iterations: 3
      threshold: 0.5
      n_history: 10

    # type: "adaptive"  # choices: ["adaptive", "auto", "statistical"]
    # config:
    #   # AdaptiveDistributionAwarePredictor configuration
    #   n_history: 10  # Increase from 5 to 10 for better pattern detection
    #   adaptive: true  
    #   enforce_connectivity: true  
    #   binary: true  
    #   spectral_reg: 0.25  # Reduce from 0.4 to 0.25 to be less constrained by spectral properties
    #   community_reg: 0.3  # Reduce from 0.4 to 0.3 for more flexibility
    #   n_communities: 3  # Increase from 2 to 3 for more nuanced community detection
    #   temporal_window: 15  # Increase from 10 to 15 for better trend detection
    #   min_edges_per_component: 2  # Lower threshold for connectivity constraints
    #   degree_reg: 0.2  # Reduce degree regularization (if present) 
    #   change_threshold: 0.15  # Lower the threshold to detect changes earlier
    #   smoothing_window: 5  # Add/increase smoothing window if not already present
    #   min_weight: 0.05  # Lower minimum weight for more adaptivity
    #   distribution_reg: 0.2  # Reduce from 0.3 to 0.2 for less aggressive distribution forcing

# Detection parameters
detection:
  threshold: 60.0  # Threshold
  batch_size: 1000  # Batch size for multiview processing
  reset: true  # Reset martingales after detection
  reset_on_traditional: false  # Whether to reset horizon martingales when traditional martingale detects a change
  max_window: null  # Maximum window size (null for adaptive)
  prediction_horizon: 5  # Number of steps to predict ahead
  
  # Betting function configuration
  betting_func_config:
    name: "mixture"  # Using power betting function
    power:  # Parameters specific to the power betting function
      epsilon: 0.7  # Epsilon
    exponential:
      lambd: 1.0  # Rate parameter controlling sensitivity
    mixture:
      epsilons: [0.7, 0.8, 0.9]  # Reduced number of epsilons, focused on higher values
    constant: {}  # No parameters needed
    beta:
      a: 0.5  # Alpha parameter of Beta distribution
      b: 1.5  # Beta parameter of Beta distribution
    kernel:
      bandwidth: 0.1  # Bandwidth for Gaussian kernel
      past_pvalues: []  # List of past p-values (updated during runtime)

  # Distance configuration
  distance:
    measure: "mahalanobis"  # Distance measure
    p: 2.0  # Order for Minkowski distance

# Feature extraction
features:
  - mean_degree           # Average node degree
  - density               # Graph density
  - mean_clustering       # Average clustering coefficient
  - mean_betweenness      # Average betweenness centrality
  - mean_eigenvector      # Average eigenvector centrality
  - mean_closeness        # Average closeness centrality
  - max_singular_value    # Largest singular value
  - min_nonzero_laplacian # Smallest non-zero Laplacian eigenvalue

# Output configuration
output:
  directory: "results"  # Output directory for results
  prefix: ""  # Prefix for output files
  save_predictions: true  # Save predicted graphs
  save_features: true  # Save extracted features
  save_martingales: true  # Save martingale values
  visualization:
    enabled: true  # Enable result visualization
    skip_shap: false  # Include SHAP value analysis
